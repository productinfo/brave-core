diff --git a/chrome/browser/resources/settings/clear_browsing_data_dialog/clear_browsing_data_dialog.js b/chrome/browser/resources/settings/clear_browsing_data_dialog/clear_browsing_data_dialog.js
index ba8db3241392d66e429a66dba47a5b740f3dfd28..a6d9622df92f7033dc42b0c45e4d4a4fee1065fc 100644
--- a/chrome/browser/resources/settings/clear_browsing_data_dialog/clear_browsing_data_dialog.js
+++ b/chrome/browser/resources/settings/clear_browsing_data_dialog/clear_browsing_data_dialog.js
@@ -148,7 +148,8 @@ Polymer({
     }
   },
 
-  listeners: {'settings-boolean-control-change': 'updateClearButtonState_'},
+  listeners: {'settings-boolean-control-change': 'updateClearButtonState_',
+              'clear-data-on-exit-page-change': 'updateSaveButtonState_' },
 
   /** @private {settings.ClearBrowsingDataBrowserProxy} */
   browserProxy_: null,
@@ -211,6 +212,7 @@ Polymer({
     if (!tab)
       return;
     this.clearButtonDisabled_ = this.getSelectedDataTypes_(tab).length == 0;
+    this.updateButtonsVisibility_();
   },
 
   /**
@@ -306,6 +308,7 @@ Polymer({
     // Strip the common prefix, i.e. use only "<datatype>".
     const matches = prefName.match(/^browser\.clear_data\.(\w+)$/);
     this.set('counters_.' + assert(matches[1]), text);
+    this.$['on-exit-tab'].setCounter(matches[1], text);
   },
 
   /**
@@ -443,4 +446,33 @@ Polymer({
   shouldShowFooter_: function() {
     return this.diceEnabled_ && !!this.syncStatus && !!this.syncStatus.signedIn;
   },
+
+  /**
+   * Updates Clear and Save buttons visibility based on the selected tab.
+   * @private
+   */
+  updateButtonsVisibility_: function () {
+    const isOnExitTab = (this.$.tabs.selectedItem.id == 'on-exit-tab');
+    this.$.clearBrowsingDataConfirm.hidden = isOnExitTab;
+    this.$.saveOnExitSettingsConfirm.hidden = !isOnExitTab;
+  },
+
+  /**
+   * Updates Save button enabled state based on on-exit-tab's changed state.
+   * @private
+   */
+  updateSaveButtonState_: function () {
+    this.$.saveOnExitSettingsConfirm.disabled = !this.$['on-exit-tab'].isModified;
+  },
+
+  /**
+   * Saves on exit settings selections.
+   * @private
+   */
+  saveOnExitSettings_: function () {
+    this.$['on-exit-tab'].saveOnExitSettings();
+    this.updateSaveButtonState_();
+    if (!this.clearingInProgress_)
+      this.$.clearBrowsingDataDialog.close();
+  }
 });
